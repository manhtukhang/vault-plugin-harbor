name: Integration Test

on:
  push:
    branches:
    - master
    - main
  pull_request:

env:
  GOPROXY: https://proxy.golang.org
  YQ_VERSION: v4.26.1

jobs:
  test-harbor:
    name: Test on Harbor
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        go: [1.22]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Setup Kind
        uses: helm/kind-action@v1
      - name: Setup Helm
        run: curl -L https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: Setup tools
        run: sudo apt-get update && sudo apt-get install -y jq make
      - name: Setup yq
        run: curl -L https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64.tar.gz | tar xz && sudo mv yq_linux_amd64 /usr/bin/yq
      - name: Setup gotest
        run: curl -L https://gotest-release.s3.amazonaws.com/gotest_linux > gotest && chmod +x gotest && sudo mv gotest /usr/bin/gotest
      - name: Setup Harbor server
        run: make setup-harbor

      - name: Hack Code Climate and Go Modules
        if: github.event_name != 'pull_request'
        run: mkdir -p github.com/${{ github.repository_owner }} && ln -sf $(pwd) github.com/${{ github.repository }}
      - name: Test & publish code coverage
        if: github.event_name != 'pull_request'
        uses: paambaati/codeclimate-action@v8.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: make integration-test-coverage
          debug: true

      - name: Test
        if: github.event_name == 'pull_request'
        run: make integration-test
